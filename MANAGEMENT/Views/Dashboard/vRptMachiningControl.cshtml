<style>
    body, html {
        height: 100%;
    }

    body {
        margin: 0;
        padding: 0;
        border: 0;
    }

    .footer {
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 30px;
        background-color: #f5f5f5;
    }

    .loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: Url("/Content/images/pageLoader.gif") 50% 50% no-repeat rgb(249,249,249);
        opacity: .8;
    }
</style>

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<body>
    <div class="container">
        <br />
        <h3>Machining Cost Control</h3>
        <div class="row">
            <div class="col-sm-2">
                <label for="lbl1">Periode :</label>
            </div>
            <div class="col-sm-2">
                <div class="input-group date datetimepicker">
                    <input type="text" class="form-control" id="prd" placeholder="YYYY" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            <div class="col-sm-3">
                <select class="form-control" id="monthkpi">
                    <option value="1">JANUARY</option>
                    <option value="2">FEBRUARY</option>
                    <option value="3">MARCH</option>
                    <option value="4">APRIL</option>
                    <option value="5">MAY</option>
                    <option value="6">JUNE</option>
                    <option value="7">JULY</option>
                    <option value="8">AUGUSTUS</option>
                    <option value="9">SEPTEMBER</option>
                    <option value="10">OCTOBER</option>
                    <option value="11">NOVEMBER</option>
                    <option value="12">DECEMBER</option>
                </select>
            </div>
            <div class="col-sm-2">
                <button id="periode" type="button" class="btn btn-danger btn-md" data-toggle="tooltip" title="View" onclick="GetPeriode();">Preview</button>
            </div>
            <div class="col-sm-3">
                <button id="btnExport" type="button" class="btn btn-danger btn-md" data-toggle="tooltip" title="Export to XLS" onclick="javascript: xport.toCSV('CostINV');">Export to XLS</button>
            </div>

        </div>
        <br />
        <div id="detailForm" class="zui-wrapper">
            <div class="form-horizontal">
                <table id="CostINV" class="table table-bordered  table-hover">
                    <caption id="thn" class="text-center" style="background-color: #4d79ff;color: white;">Machining Cost Control</caption>
                    <thead>
                        <tr>
                            <th style="background-color: #4d79ff;color: white;text-align: center"><b>Remark</b></th>
                            <th style="background-color: #4d79ff;color: white;"><span class='pull-right'><b>Standard</b></span></th>
                            <th style="background-color: #4d79ff;color: white;"><span class='pull-right'><b>Actual</b></span></th>
                            <th style="background-color: #4d79ff;color: white;"><span class='pull-right'><b>Variance</b></span></th>
                            <th style="background-color: #4d79ff;color: white;"><span class='pull-right'><b>Variance(%)</b></span></th>
                        </tr>
                    </thead>
                    <tbody id="tbodytblINV"></tbody>
                </table>
            </div>
            <br />
            <br />
            <br />
            <br />

        </div>
        <div class="loader"></div>
    </div>
</body>

<script>
    var urlKPI = "@Url.Content("~/Dashboard")";
    var totC1 = 0, totC2 = 0, totDiff = 0, totvar = 0;
    $(document).ready(function () {
        $('.datetimepicker').datetimepicker({
            format: 'YYYY'
        });

        var dNow = new Date()
        var iMonth = dNow.getMonth() + 1
        var iYear = dNow.getFullYear()
        $('#prd').val(iYear);
        $('#thn').text('Machining Cost Control Year : ' + iYear + ' - Month: ' + iMonth);
        $('#monthkpi').val(iMonth);
        getView(iYear, iMonth);
    });

    function getView(year, month) {
        var tr;
        var ppicObj = {
            thn: year,
            bln: month
        };
        totC1 = 0, totC2 = 0, totDiff = 0, totvar = 0;
        $.ajax({
            url: urlKPI + "/vRptMachCostControl/",
            data: JSON.stringify(ppicObj),
            contentType: "application/json;charset=utf-8",
            success: function (result) {
                $.each(result, function (key, item) {
                    tr = $('<tr/>');
                    var s = item.item;
                    tr.append("<td><b>" + item.item + "</b></td>");
                    tr.append("<td><span class='pull-right'>" + formatNumber(item.C1) + "</span></td>");
                    tr.append("<td><span class='pull-right'>" + formatNumber(item.C2) + "</span></td>");
                    if (item.diff > 0)
                    {
                        tr.append("<td><span class='pull-right'>" + formatNumber(item.diff) + "</span></td>");
                        tr.append("<td><span class='pull-right'>" + formatNumber(item.variance) + "</span></td>");
                    }
                    else {
                        tr.append("<td><span class='pull-right' style='color: red;'>" + formatNumber(item.diff) + "</span></td>");
                        tr.append("<td><span class='pull-right' style='color: red;'>" + formatNumber(item.variance) + "</span></td>");
                    }
                    $('#CostINV').append(tr);
                    totC1 = totC1 + item.C1;
                    totC2 = totC2 + item.C2;
                    totDiff = totDiff + item.diff;
                    

                });
                if (totC1 > 0)
                    totvar = totDiff / totC1 * 100;
                else totvar = 0;
                tr = $('<tr/>');
                tr.append("<td><span class='pull-right' style='color: #1a1aff;'><b>GRAND TOTAL</b></span></td>");
                tr.append("<td><span class='pull-right' style='color: #1a1aff;'><b>" + formatNumber(totC1) + "</b></span></td>");
                tr.append("<td><span class='pull-right' style='color: #1a1aff;'><b>" + formatNumber(totC2) + "</b></span></td>");
                if (totDiff >= 0) {
                    tr.append("<td><span class='pull-right' style='color: #1a1aff;'><b>" + formatNumber(totDiff) + "</b></span></td>");
                    tr.append("<td><span class='pull-right' style='color: #1a1aff;'><b>" + formatNumber(totvar.toFixed(2)) + "</b></span></td>");
                }
                else {
                    tr.append("<td><span class='pull-right' style='color: red;'><b>" + formatNumber(totDiff) + "</b></span></td>");
                    tr.append("<td><span class='pull-right' style='color: red;'><b>" + formatNumber(totvar.toFixed(2)) + "</b></span></td>");
                }
                $('#CostINV').append(tr);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            },
            beforeSend: function () { $(".loader").show(); },
            complete: function () { $(".loader").hide(); },
            type: 'POST', dataType: 'json'
        });
    }




    function GetPeriode() {
        var tr;
        var newyear = $('#prd').val();
        var newmonth = $('#monthkpi').val();
        $('#tbodytblINV').empty();
        $('#thn').text('Machining Cost Control Year : ' + newyear + ' - Month: ' + newmonth);
        getView(newyear, newmonth)
    }


    function formatNumber(num) {
        return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,")
    }

    var xport = {
        _fallbacktoCSV: true,
        toXLS: function (tableId, filename) {
            this._filename = (typeof filename == 'undefined') ? tableId : filename;

            //var ieVersion = this._getMsieVersion();
            //Fallback to CSV for IE & Edge
            if ((this._getMsieVersion() || this._isFirefox()) && this._fallbacktoCSV) {
                return this.toCSV(tableId);
            } else if (this._getMsieVersion() || this._isFirefox()) {
                alert("Not supported browser");
            }

            //Other Browser can download xls
            var htmltable = document.getElementById(tableId);
            var html = htmltable.outerHTML;

            this._downloadAnchor("data:application/vnd.ms-excel" + encodeURIComponent(html), 'xls');
        },
        toCSV: function (tableId, filename) {
            this._filename = (typeof filename === 'undefined') ? tableId : filename;
            // Generate our CSV string from out HTML Table
            var csv = this._tableToCSV(document.getElementById(tableId));
            // Create a CSV Blob
            var blob = new Blob([csv], { type: "text/csv" });

            // Determine which approach to take for the download
            if (navigator.msSaveOrOpenBlob) {
                // Works for Internet Explorer and Microsoft Edge
                navigator.msSaveOrOpenBlob(blob, this._filename + ".csv");
            } else {
                this._downloadAnchor(URL.createObjectURL(blob), 'csv');
            }
        },
        _getMsieVersion: function () {
            var ua = window.navigator.userAgent;

            var msie = ua.indexOf("MSIE ");
            if (msie > 0) {
                // IE 10 or older => return version number
                return parseInt(ua.substring(msie + 5, ua.indexOf(".", msie)), 10);
            }

            var trident = ua.indexOf("Trident/");
            if (trident > 0) {
                // IE 11 => return version number
                var rv = ua.indexOf("rv:");
                return parseInt(ua.substring(rv + 3, ua.indexOf(".", rv)), 10);
            }

            var edge = ua.indexOf("Edge/");
            if (edge > 0) {
                // Edge (IE 12+) => return version number
                return parseInt(ua.substring(edge + 5, ua.indexOf(".", edge)), 10);
            }

            // other browser
            return false;
        },
        _isFirefox: function () {
            if (navigator.userAgent.indexOf("Firefox") > 0) {
                return 1;
            }

            return 0;
        },
        _downloadAnchor: function (content, ext) {
            var anchor = document.createElement("a");
            anchor.style = "display:none !important";
            anchor.id = "downloadanchor";
            document.body.appendChild(anchor);

            // If the [download] attribute is supported, try to use it

            if ("download" in anchor) {
                anchor.download = this._filename + "." + ext;
            }
            anchor.href = content;
            anchor.click();
            anchor.remove();
        },
        _tableToCSV: function (table) {
            // We'll be co-opting `slice` to create arrays
            var slice = Array.prototype.slice;

            return slice
              .call(table.rows)
              .map(function (row) {
                  return slice
                    .call(row.cells)
                    .map(function (cell) {
                        return '"t"'.replace("t", cell.textContent);
                    })
                    .join(",");
              })
              .join("\r\n");
        }
    };

</script>